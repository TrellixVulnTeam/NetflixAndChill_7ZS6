{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Desktop\\\\Tuts\\\\new-blog\\\\src\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport useFetch from \"./useFetch\";\nimport Loading from \"./Loading\";\nimport he from \"he\";\nimport axios from \"axios\";\nimport CreateChilling from \"./CreateChilling\";\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = () => {\n  _s();\n\n  const {\n    netflixid\n  } = useParams();\n  const [wait, setWait] = useState(true);\n  const [chill, setChill] = useState(true);\n  const [added, setAdded] = useState(false);\n  const [movie, setMovie] = useState([]);\n  const [chillings, setChillings] = useState([]);\n  const {\n    data,\n    pending,\n    setPending,\n    error,\n    movies,\n    total\n  } = useFetch(`https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi?t=loadvideo&q=${netflixid}`);\n  useEffect(() => {\n    console.log(added);\n\n    if (pending == false) {\n      setWait(false);\n      setMovie(data.RESULT.nfinfo);\n      axios.get(`http://localhost:5000/chillings/movie/${netflixid}`).then(response => {\n        setChillings(response.data);\n        setChill(false);\n        console.log(chillings);\n        setAdded(false); //   console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [data, added]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: [console.log(movie), wait ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"col-6 d-flex justify-content-center\" //   style={{ background: \"wheat\" }}\n          ,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            id: \"movieCard\",\n            style: {\n              width: \"25rem\",\n              background: \"wheat\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [movie.image1 != \"\" && /*#__PURE__*/_jsxDEV(Card.Img, {\n                src: movie.image1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 43\n              }, this) || /*#__PURE__*/_jsxDEV(Card.Img, {\n                src: movie.image2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"text-center mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"headings\",\n                  children: \"Title: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this), he.decode(movie.title)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"headings\",\n                  children: \"Type: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this), movie.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), !movie.rating == \"0\" && /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"headings\",\n                  children: \"Rating: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this), movie.avgrating]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"headings\",\n                  children: \"Released: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this), movie.released]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"headings\",\n                  children: \"Runtime: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this), movie.runtime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"headings\",\n                  children: \"Synopsis: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this), he.decode(movie.synopsis)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"col-6 d-flex justify-content-center\" //   style={{ background: \"pink\" }}\n          ,\n          children: !wait && /*#__PURE__*/_jsxDEV(CreateChilling, {\n            nid: netflixid,\n            title: he.decode(movie.title),\n            getAdded: added => setAdded(added)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"allChillings\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"All Chillings for this title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: !chill && chillings.map(chilling => /*#__PURE__*/_jsxDEV(Col, {\n            className: \"col-4 mt-5\",\n            children: [chilling == [] && console.log(), /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: \"20rem\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"headings\",\n                    children: \"Username:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 27\n                  }, this), \" \", chilling.username]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"headings\",\n                    children: \"Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 27\n                  }, this), \" \", chilling.date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"headings\",\n                    children: \"People:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 27\n                  }, this), \" \", chilling.people]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"headings\",\n                    children: \"Duration:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 27\n                  }, this), \" \", chilling.duration]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"headings\",\n                    children: \"Language:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 27\n                  }, this), \" \", chilling.language]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"headings\",\n                    children: \"Country:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 27\n                  }, this), \" \", chilling.country]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"headings\",\n                    children: \"Note:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 27\n                  }, this), \" \", chilling.note]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 23\n              }, this)\n            }, chilling._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movie, \"SXeC7KpfwnH4wWAFpLzSeIRqaAw=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Desktop/Tuts/new-blog/src/Movie.js"],"names":["useState","useEffect","useParams","useFetch","Loading","he","axios","CreateChilling","Button","Card","Container","Row","Col","Movie","netflixid","wait","setWait","chill","setChill","added","setAdded","movie","setMovie","chillings","setChillings","data","pending","setPending","error","movies","total","console","log","RESULT","nfinfo","get","then","response","catch","width","background","image1","image2","decode","title","type","rating","avgrating","released","runtime","synopsis","map","chilling","username","date","people","duration","language","country","note","_id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\nimport Loading from \"./Loading\";\r\nimport he from \"he\";\r\nimport axios from \"axios\";\r\nimport CreateChilling from \"./CreateChilling\";\r\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Movie = () => {\r\n  const { netflixid } = useParams();\r\n  const [wait, setWait] = useState(true);\r\n  const [chill, setChill] = useState(true);\r\n  const [added, setAdded] = useState(false);\r\n  const [movie, setMovie] = useState([]);\r\n  const [chillings, setChillings] = useState([]);\r\n\r\n  const { data, pending, setPending, error, movies, total } = useFetch(\r\n    `https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi?t=loadvideo&q=${netflixid}`\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(added);\r\n    if (pending == false) {\r\n      setWait(false);\r\n\r\n      setMovie(data.RESULT.nfinfo);\r\n\r\n      axios\r\n        .get(`http://localhost:5000/chillings/movie/${netflixid}`)\r\n        .then((response) => {\r\n          setChillings(response.data);\r\n          setChill(false);\r\n          console.log(chillings);\r\n          setAdded(false);\r\n          //   console.log(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [data, added]);\r\n\r\n  return (\r\n    <div className=\"movie-details\">\r\n      {console.log(movie)}\r\n      {wait ? (\r\n        <Loading />\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"mb-5\">\r\n            <Col\r\n              className=\"col-6 d-flex justify-content-center\"\r\n              //   style={{ background: \"wheat\" }}\r\n            >\r\n              <Card\r\n                id=\"movieCard\"\r\n                style={{ width: \"25rem\", background: \"wheat\" }}\r\n              >\r\n                <Card.Body>\r\n                  {(movie.image1 != \"\" && <Card.Img src={movie.image1} />) || (\r\n                    <Card.Img src={movie.image2} />\r\n                  )}\r\n                  <Card.Title className=\"text-center mt-2\">\r\n                    <span id=\"headings\">Title: </span>\r\n                    {he.decode(movie.title)}\r\n                  </Card.Title>\r\n                  <Card.Text className=\"text-center\">\r\n                    <span id=\"headings\">Type: </span>\r\n                    {movie.type}\r\n                  </Card.Text>\r\n                  {!movie.rating == \"0\" && (\r\n                    <Card.Text className=\"text-center\">\r\n                      <span id=\"headings\">Rating: </span>\r\n                      {movie.avgrating}\r\n                    </Card.Text>\r\n                  )}\r\n                  <Card.Text className=\"text-center\">\r\n                    <span id=\"headings\">Released: </span>\r\n                    {movie.released}\r\n                  </Card.Text>\r\n                  <Card.Text className=\"text-center\">\r\n                    <span id=\"headings\">Runtime: </span>\r\n                    {movie.runtime}\r\n                  </Card.Text>\r\n                  <Card.Text className=\"text-center\">\r\n                    <span id=\"headings\">Synopsis: </span>\r\n                    {he.decode(movie.synopsis)}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col\r\n              className=\"col-6 d-flex justify-content-center\"\r\n              //   style={{ background: \"pink\" }}\r\n            >\r\n              {!wait && (\r\n                <CreateChilling\r\n                  nid={netflixid}\r\n                  title={he.decode(movie.title)}\r\n                  getAdded={(added) => setAdded(added)}\r\n                />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n\r\n          <div id=\"allChillings\">\r\n            <h1 className=\"text-center\">All Chillings for this title</h1>\r\n            <Row>\r\n              {!chill &&\r\n                chillings.map((chilling) => (\r\n                  <Col className=\"col-4 mt-5\">\r\n                    {chilling==[] && console.log()}\r\n                    <Card key={chilling._id} style={{ width: \"20rem\" }}>\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          <span id=\"headings\">Username:</span>{\" \"}\r\n                          {chilling.username}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                          <span id=\"headings\">Date:</span> {chilling.date}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                          <span id=\"headings\">People:</span> {chilling.people}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                          <span id=\"headings\">Duration:</span>{\" \"}\r\n                          {chilling.duration}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                          <span id=\"headings\">Language:</span>{\" \"}\r\n                          {chilling.language}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                          <span id=\"headings\">Country:</span> {chilling.country}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                          <span id=\"headings\">Note:</span> {chilling.note}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                ))}\r\n            </Row>\r\n          </div>\r\n        </Container>\r\n      )}\r\n\r\n      {/* {console.log(netflixid)} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}