{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Desktop\\\\Tuts\\\\new-blog\\\\src\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport useFetch from \"./useFetch\";\nimport Loading from \"./Loading\";\nimport he from \"he\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = () => {\n  _s();\n\n  const {\n    netflixid\n  } = useParams();\n  const [wait, setWait] = useState(true);\n  const [movie, setMovie] = useState([]);\n\n  const searchMovie = () => {};\n\n  const {\n    data,\n    pending,\n    setPending,\n    error,\n    movies,\n    total\n  } = useFetch(`https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi?t=loadvideo&q=${netflixid}`);\n  useEffect(() => {\n    if (pending == false) {\n      setWait(false);\n      setMovie(data.RESULT.nfinfo);\n      console.log(movie);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-details\",\n    children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movie, \"pwR2ioD+yEhvZQgyWe6P92KAoyQ=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Desktop/Tuts/new-blog/src/Movie.js"],"names":["useState","useEffect","useParams","useFetch","Loading","he","Movie","netflixid","wait","setWait","movie","setMovie","searchMovie","data","pending","setPending","error","movies","total","RESULT","nfinfo","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,EAAP,MAAe,IAAf;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAgBL,SAAS,EAA/B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMY,WAAW,GAAG,MAAM,CAAE,CAA5B;;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,UAAjB;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA,MAApC;AAA4CC,IAAAA;AAA5C,MAAsDf,QAAQ,CACjE,iEAAgEI,SAAU,EADT,CAApE;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,OAAO,IAAI,KAAf,EAAsB;AACpBL,MAAAA,OAAO,CAAC,KAAD,CAAP;AAEAE,MAAAA,QAAQ,CAACE,IAAI,CAACM,MAAL,CAAYC,MAAb,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACD;AACF,GAPQ,EAON,CAACG,IAAD,CAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAtCD;;GAAMP,K;UACkBJ,S,EAIsCC,Q;;;KALxDG,K;AAwCN,eAAeA,KAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\nimport Loading from \"./Loading\";\r\nimport he from \"he\";\r\n\r\nconst Movie = () => {\r\n  const { netflixid } = useParams();\r\n  const [wait, setWait] = useState(true);\r\n  const [movie, setMovie] = useState([]);\r\n  const searchMovie = () => {};\r\n  const { data, pending, setPending, error, movies, total } = useFetch(\r\n    `https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi?t=loadvideo&q=${netflixid}`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (pending == false) {\r\n      setWait(false);\r\n\r\n      setMovie(data.RESULT.nfinfo);\r\n      console.log(movie);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"blog-details\">\r\n      <Loading/>\r\n      {/* {wait ? (\r\n        <Loading />\r\n      ) : (\r\n        <article>\r\n          {(!movie.image1 == \"\" && <img src={movie.image2}></img>) || (\r\n            <img src={movie.image}></img>\r\n          )}\r\n          <h2>Title: {he.decode(movie.title)}</h2>\r\n          <p>Type: {movie.type}</p>\r\n          {!movie.rating == \"0\" && <p>Rating: {movie.avgrating}</p>}\r\n          <p>Released: {movie.released}</p>\r\n          <p>Runtime: {movie.runtime}</p>\r\n          <p>Synopsis: {he.decode(movie.synopsis)}</p>\r\n        </article>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}