{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [pending, setPending] = useState(true);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const [total, setTotal] = useState(1);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch(url, {\n      signal: abortCont.signal,\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-key\": \"3b8ba7d032msh9616bf36969a1a2p1a7015jsn5184b59caa2b\",\n        \"x-rapidapi-host\": \"unogs-unogs-v1.p.rapidapi.com\"\n      }\n    }).then(res => {\n      if (!res.ok) {\n        throw Error(\"There seems to be an issue fetching data.\");\n      }\n\n      return res.json();\n    }).then(data => {\n      setError(null);\n      setPending(false);\n      setData(data);\n      setMovies(data.ITEMS);\n      setTotal(data.COUNT);\n    }).catch(err => {\n      if (err.name === \"AbortError\") {\n        console.log(\"Ftech aborted!\");\n      } else {\n        setError(err.message);\n        setPending(false);\n      }\n    });\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    pending,\n    setPending,\n    error,\n    movies,\n    total\n  };\n};\n\n_s(useFetch, \"3eOrYY5Zysk7tkU8dwX79eoOZtE=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Documents/GitHub/NetfliChill/NetflixAndChill/client/src/Hooks/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","pending","setPending","error","setError","movies","setMovies","total","setTotal","abortCont","AbortController","fetch","signal","method","headers","then","res","ok","Error","json","ITEMS","COUNT","catch","err","name","console","log","message","abort"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AAEAC,IAAAA,KAAK,CAACb,GAAD,EAAM;AACTc,MAAAA,MAAM,EAAEH,SAAS,CAACG,MADT;AAGTC,MAAAA,MAAM,EAAE,KAHC;AAITC,MAAAA,OAAO,EAAE;AACP,0BAAkB,oDADX;AAEP,2BAAmB;AAFZ;AAJA,KAAN,CAAL,CASGC,IATH,CASSC,GAAD,IAAS;AACb,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,cAAMC,KAAK,CAAC,2CAAD,CAAX;AACD;;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,KAdH,EAeGJ,IAfH,CAeShB,IAAD,IAAU;AACdK,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAO,MAAAA,SAAS,CAACP,IAAI,CAACqB,KAAN,CAAT;AACAZ,MAAAA,QAAQ,CAACT,IAAI,CAACsB,KAAN,CAAR;AAED,KAtBH,EAuBGC,KAvBH,CAuBUC,GAAD,IAAS;AACd,UAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,OAFD,MAEO;AACLtB,QAAAA,QAAQ,CAACmB,GAAG,CAACI,OAAL,CAAR;AACAzB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KA9BH;AAgCA,WAAO,MAAMO,SAAS,CAACmB,KAAV,EAAb;AACD,GApCQ,EAoCN,CAAC9B,GAAD,CApCM,CAAT;AAqCA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,OAAR;AAAiBC,IAAAA,UAAjB;AAA6BC,IAAAA,KAA7B;AAAoCE,IAAAA,MAApC;AAA4CE,IAAAA;AAA5C,GAAP;AACD,CA5CD;;GAAMV,Q;;AA8CN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState([]);\r\n  const [pending, setPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [movies, setMovies] = useState([]);\r\n  const [total, setTotal] = useState(1);\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n\r\n    fetch(url, {\r\n      signal: abortCont.signal,\r\n\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-key\": \"3b8ba7d032msh9616bf36969a1a2p1a7015jsn5184b59caa2b\",\r\n        \"x-rapidapi-host\": \"unogs-unogs-v1.p.rapidapi.com\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw Error(\"There seems to be an issue fetching data.\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setError(null);\r\n        setPending(false);\r\n        setData(data);\r\n        setMovies(data.ITEMS);\r\n        setTotal(data.COUNT);\r\n       \r\n      })\r\n      .catch((err) => {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"Ftech aborted!\");\r\n        } else {\r\n          setError(err.message);\r\n          setPending(false);\r\n        }\r\n      });\r\n\r\n    return () => abortCont.abort();\r\n  }, [url]);\r\n  return { data, pending, setPending, error, movies, total };\r\n};\r\n\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}