{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Desktop\\\\Tuts\\\\new-blog\\\\src\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport useFetch from \"./useFetch\";\nimport Loading from \"./Loading\";\nimport he from \"he\";\nimport axios from \"axios\";\nimport CreateChilling from \"./CreateChilling\";\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = () => {\n  _s();\n\n  const {\n    netflixid\n  } = useParams();\n  const [wait, setWait] = useState(true);\n  const [chill, setChill] = useState(true);\n  const [added, setAdded] = useState(false);\n  const [movie, setMovie] = useState([]);\n  const [chillings, setChillings] = useState([]);\n  const {\n    data,\n    pending,\n    setPending,\n    error,\n    movies,\n    total\n  } = useFetch(`https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi?t=loadvideo&q=${netflixid}`);\n  useEffect(() => {\n    console.log(added);\n\n    if (pending == false) {\n      setWait(false);\n      setMovie(data.RESULT.nfinfo);\n      axios.get(`http://localhost:5000/chillings/movie/${netflixid}`).then(response => {\n        setChillings(response.data);\n        setChill(false);\n        console.log(chillings);\n        setAdded(false); //   console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [data, added]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: [console.log(movie), wait ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: \"25rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [movie.image1 != \"\" && /*#__PURE__*/_jsxDEV(Card.Img, {\n                src: movie.image1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 43\n              }, this) || /*#__PURE__*/_jsxDEV(Card.Img, {\n                src: movie.image2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Title: \", he.decode(movie.title)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Type: \", movie.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), !movie.rating == \"0\" && /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Rating: \", movie.avgrating]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Released: \", movie.released]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Runtime: \", movie.runtime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Synopsis: \", he.decode(movie.synopsis)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: !wait && /*#__PURE__*/_jsxDEV(CreateChilling, {\n            nid: netflixid,\n            title: he.decode(movie.title),\n            getAdded: added => setAdded(added)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"allChilling\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"All Chillings for this title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), !chill && chillings.map(chilling => /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: \"20rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 34\n                }, this), \"Username: \", chilling.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Date: \", chilling.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"People: \", chilling.people]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Duration: \", chilling.duration]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Language: \", chilling.language]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Country: \", chilling.country]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Note: \", chilling.note]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)\n          }, chilling._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movie, \"SXeC7KpfwnH4wWAFpLzSeIRqaAw=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Desktop/Tuts/new-blog/src/Movie.js"],"names":["useState","useEffect","useParams","useFetch","Loading","he","axios","CreateChilling","Button","Card","Container","Row","Col","Movie","netflixid","wait","setWait","chill","setChill","added","setAdded","movie","setMovie","chillings","setChillings","data","pending","setPending","error","movies","total","console","log","RESULT","nfinfo","get","then","response","catch","width","image1","image2","decode","title","type","rating","avgrating","released","runtime","synopsis","map","chilling","username","date","people","duration","language","country","note","_id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\nimport Loading from \"./Loading\";\r\nimport he from \"he\";\r\nimport axios from \"axios\";\r\nimport CreateChilling from \"./CreateChilling\";\r\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Movie = () => {\r\n  const { netflixid } = useParams();\r\n  const [wait, setWait] = useState(true);\r\n  const [chill, setChill] = useState(true);\r\n  const [added, setAdded] = useState(false);\r\n  const [movie, setMovie] = useState([]);\r\n  const [chillings, setChillings] = useState([]);\r\n\r\n  const { data, pending, setPending, error, movies, total } = useFetch(\r\n    `https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi?t=loadvideo&q=${netflixid}`\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(added);\r\n    if (pending == false) {\r\n      setWait(false);\r\n\r\n      setMovie(data.RESULT.nfinfo);\r\n\r\n      axios\r\n        .get(`http://localhost:5000/chillings/movie/${netflixid}`)\r\n        .then((response) => {\r\n          setChillings(response.data);\r\n          setChill(false);\r\n          console.log(chillings);\r\n          setAdded(false);\r\n          //   console.log(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [data, added]);\r\n\r\n  return (\r\n    <div className=\"movie-details\">\r\n      {console.log(movie)}\r\n      {wait ? (\r\n        <Loading />\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"mb-5\">\r\n            <Col>\r\n              <Card style={{ width: \"25rem\" }}>\r\n                <Card.Body>\r\n                  {(movie.image1 != \"\" && <Card.Img src={movie.image1} />) || (\r\n                    <Card.Img src={movie.image2} />\r\n                  )}\r\n                  <Card.Title>Title: {he.decode(movie.title)}</Card.Title>\r\n                  <Card.Text>Type: {movie.type}</Card.Text>\r\n                  {!movie.rating == \"0\" && (\r\n                    <Card.Text>Rating: {movie.avgrating}</Card.Text>\r\n                  )}\r\n                  <Card.Text>Released: {movie.released}</Card.Text>\r\n                  <Card.Text>Runtime: {movie.runtime}</Card.Text>\r\n                  <Card.Text>Synopsis: {he.decode(movie.synopsis)}</Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              {!wait && (\r\n                <CreateChilling\r\n                  nid={netflixid}\r\n                  title={he.decode(movie.title)}\r\n                  getAdded={(added) => setAdded(added)}\r\n                />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <div id=\"allChilling\">\r\n              <h1>All Chillings for this title</h1>\r\n              {!chill &&\r\n                chillings.map((chilling) => (\r\n                  <Card key={chilling._id} style={{ width: \"20rem\" }}>\r\n                    <Card.Body>\r\n                      <Card.Text><span></span>Username: {chilling.username}</Card.Text>\r\n                      <Card.Text>Date: {chilling.date}</Card.Text>\r\n                      <Card.Text>People: {chilling.people}</Card.Text>\r\n                      <Card.Text>Duration: {chilling.duration}</Card.Text>\r\n                      <Card.Text>Language: {chilling.language}</Card.Text>\r\n                      <Card.Text>Country: {chilling.country}</Card.Text>\r\n                      <Card.Text>Note: {chilling.note}</Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                ))}\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      {/* {console.log(netflixid)} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}