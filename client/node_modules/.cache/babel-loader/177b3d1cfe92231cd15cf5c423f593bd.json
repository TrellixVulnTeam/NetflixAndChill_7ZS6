{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Desktop\\\\Tuts\\\\new-blog\\\\src\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport useFetch from \"./useFetch\";\nimport Loading from \"./Loading\";\nimport he from \"he\";\nimport axios from \"axios\";\nimport CreateChilling from \"./CreateChilling\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = () => {\n  _s();\n\n  const {\n    netflixid\n  } = useParams();\n  const [wait, setWait] = useState(true);\n  const [chill, setChill] = useState(true);\n  const [movie, setMovie] = useState([]);\n  const [chillings, setChillings] = useState([]);\n\n  const searchMovie = () => {};\n\n  const {\n    data,\n    pending,\n    setPending,\n    error,\n    movies,\n    total\n  } = useFetch(`https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi?t=loadvideo&q=${netflixid}`);\n  useEffect(() => {\n    if (pending == false) {\n      setWait(false);\n      setMovie(data.RESULT.nfinfo); //   console.log(\"Movie is: \"+movie);\n\n      axios.get(`http://localhost:5000/chillings/movie/${netflixid}`).then(response => {\n        setChillings(response.data);\n        setChill(false); //   console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: [wait ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [!movie.image1 == \"\" && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.image2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 36\n      }, this) || /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Title: \", he.decode(movie.title)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", movie.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), !movie.rating == \"0\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rating: \", movie.avgrating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Released: \", movie.released]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Runtime: \", movie.runtime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Synopsis: \", he.decode(movie.synopsis)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), !wait && /*#__PURE__*/_jsxDEV(CreateChilling, {\n      nid: netflixid,\n      title: he.decode(movie.title)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), !chill && chillings.map(chilling => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, chilling._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movie, \"WKzAjfFgb7pGOTTAn+0umI9yCM8=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Desktop/Tuts/new-blog/src/Movie.js"],"names":["useState","useEffect","useParams","useFetch","Loading","he","axios","CreateChilling","Movie","netflixid","wait","setWait","chill","setChill","movie","setMovie","chillings","setChillings","searchMovie","data","pending","setPending","error","movies","total","RESULT","nfinfo","get","then","response","catch","console","log","image1","image2","image","decode","title","type","rating","avgrating","released","runtime","synopsis","map","chilling","_id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\nimport Loading from \"./Loading\";\r\nimport he from \"he\";\r\nimport axios from \"axios\";\r\nimport CreateChilling from \"./CreateChilling\";\r\n\r\nconst Movie = () => {\r\n  const { netflixid } = useParams();\r\n  const [wait, setWait] = useState(true);\r\n  const [chill, setChill] = useState(true);\r\n  const [movie, setMovie] = useState([]);\r\n  const [chillings, setChillings] = useState([]);\r\n  const searchMovie = () => {};\r\n  const { data, pending, setPending, error, movies, total } = useFetch(\r\n    `https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi?t=loadvideo&q=${netflixid}`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (pending == false) {\r\n      setWait(false);\r\n\r\n      setMovie(data.RESULT.nfinfo);\r\n    //   console.log(\"Movie is: \"+movie);\r\n\r\n      axios\r\n        .get(`http://localhost:5000/chillings/movie/${netflixid}`)\r\n        .then((response) => {\r\n            setChillings(response.data);\r\n            setChill(false);\r\n        //   console.log(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"movie-details\">\r\n      {wait ? (\r\n        <Loading />\r\n      ) : (\r\n        <article>\r\n          {(!movie.image1 == \"\" && <img src={movie.image2}></img>) || (\r\n            <img src={movie.image}></img>\r\n          )}\r\n          <h2>Title: {he.decode(movie.title)}</h2>\r\n          <p>Type: {movie.type}</p>\r\n          {!movie.rating == \"0\" && <p>Rating: {movie.avgrating}</p>}\r\n          <p>Released: {movie.released}</p>\r\n          <p>Runtime: {movie.runtime}</p>\r\n          <p>Synopsis: {he.decode(movie.synopsis)}</p>\r\n        </article>\r\n      )}\r\n\r\n      {/* {console.log(netflixid)} */}\r\n      {!wait && (\r\n        <CreateChilling nid={netflixid} title={he.decode(movie.title)} />\r\n      )}\r\n\r\n      {/* {!wait && chillings.map((chilling)=>{\r\n          console.log(chilling);\r\n      })} */}\r\n      {!chill && chillings.map((chilling)=>{\r\n          <div key={chilling._id}>\r\n              <p></p>\r\n          </div>\r\n        \r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}