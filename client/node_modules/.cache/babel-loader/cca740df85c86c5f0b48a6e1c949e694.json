{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Desktop\\\\Tuts\\\\new-blog\\\\src\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport useFetch from \"./useFetch\";\nimport Loading from \"./Loading\";\nimport he from \"he\";\nimport axios from \"axios\";\nimport CreateChilling from \"./CreateChilling\";\nimport { Button, Card } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = () => {\n  _s();\n\n  const {\n    netflixid\n  } = useParams();\n  const [wait, setWait] = useState(true);\n  const [chill, setChill] = useState(true);\n  const [added, setAdded] = useState(false);\n  const [movie, setMovie] = useState([]);\n  const [chillings, setChillings] = useState([]);\n  const {\n    data,\n    pending,\n    setPending,\n    error,\n    movies,\n    total\n  } = useFetch(`https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi?t=loadvideo&q=${netflixid}`);\n  useEffect(() => {\n    console.log(added);\n\n    if (pending == false) {\n      setWait(false);\n      setMovie(data.RESULT.nfinfo);\n      axios.get(`http://localhost:5000/chillings/movie/${netflixid}`).then(response => {\n        setChillings(response.data);\n        setChill(false);\n        console.log(chillings);\n        setAdded(false); //   console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [data, added]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: [wait ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [!movie.image1 == \"\" && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.image2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 36\n      }, this) || /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Title: \", he.decode(movie.title)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", movie.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), !movie.rating == \"0\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rating: \", movie.avgrating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Released: \", movie.released]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Runtime: \", movie.runtime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Synopsis: \", he.decode(movie.synopsis)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), !wait && /*#__PURE__*/_jsxDEV(CreateChilling, {\n      nid: netflixid,\n      title: he.decode(movie.title),\n      getAdded: added => setAdded(added)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"allChilling\",\n      children: !chill && chillings.map(chilling => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Username: \", chilling.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", chilling.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"People: \", chilling.people]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Duration: \", chilling.duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Language: \", chilling.language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Country: \", chilling.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Note: \", chilling.note]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, chilling._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movie, \"SXeC7KpfwnH4wWAFpLzSeIRqaAw=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Desktop/Tuts/new-blog/src/Movie.js"],"names":["useState","useEffect","useParams","useFetch","Loading","he","axios","CreateChilling","Button","Card","Movie","netflixid","wait","setWait","chill","setChill","added","setAdded","movie","setMovie","chillings","setChillings","data","pending","setPending","error","movies","total","console","log","RESULT","nfinfo","get","then","response","catch","image1","image2","image","decode","title","type","rating","avgrating","released","runtime","synopsis","map","chilling","username","date","people","duration","language","country","note","_id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\nimport Loading from \"./Loading\";\r\nimport he from \"he\";\r\nimport axios from \"axios\";\r\nimport CreateChilling from \"./CreateChilling\";\r\nimport {Button, Card} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\n\r\nconst Movie = () => {\r\n  const { netflixid } = useParams();\r\n  const [wait, setWait] = useState(true);\r\n  const [chill, setChill] = useState(true);\r\n  const [added, setAdded] = useState(false);\r\n  const [movie, setMovie] = useState([]);\r\n  const [chillings, setChillings] = useState([]);\r\n  \r\n  const { data, pending, setPending, error, movies, total } = useFetch(\r\n    `https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi?t=loadvideo&q=${netflixid}`\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(added);\r\n    if (pending == false) {\r\n      setWait(false);\r\n\r\n      setMovie(data.RESULT.nfinfo);\r\n\r\n        \r\n      axios\r\n        .get(`http://localhost:5000/chillings/movie/${netflixid}`)\r\n        .then((response) => {\r\n          setChillings(response.data);\r\n          setChill(false);\r\n          console.log(chillings);\r\n          setAdded(false);\r\n          //   console.log(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [data, added]);\r\n\r\n  return (\r\n    <div className=\"movie-details\">\r\n      {wait ? (\r\n        <Loading />\r\n      ) : (\r\n          \r\n        <article>\r\n          {(!movie.image1 == \"\" && <img src={movie.image2}></img>) || (\r\n            <img src={movie.image}></img>\r\n          )}\r\n          <h2>Title: {he.decode(movie.title)}</h2>\r\n          <p>Type: {movie.type}</p>\r\n          {!movie.rating == \"0\" && <p>Rating: {movie.avgrating}</p>}\r\n          <p>Released: {movie.released}</p>\r\n          <p>Runtime: {movie.runtime}</p>\r\n          <p>Synopsis: {he.decode(movie.synopsis)}</p>\r\n        </article>\r\n      )}\r\n\r\n      {/* {console.log(netflixid)} */}\r\n      {!wait && (\r\n        <CreateChilling nid={netflixid} title={he.decode(movie.title)} getAdded= {(added) => setAdded(added)}/>\r\n      )}\r\n\r\n      <div id=\"allChilling\">\r\n        {!chill &&\r\n          chillings.map((chilling) => (\r\n            <div key={chilling._id}>\r\n              <p>Username: {chilling.username}</p>\r\n              <p>Date: {chilling.date}</p>\r\n              <p>People: {chilling.people}</p>\r\n              <p>Duration: {chilling.duration}</p>\r\n              <p>Language: {chilling.language}</p>\r\n              <p>Country: {chilling.country}</p>\r\n              <p>Note: {chilling.note}</p>\r\n            </div>\r\n          ))}\r\n          \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}