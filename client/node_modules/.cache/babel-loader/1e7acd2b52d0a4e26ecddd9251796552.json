{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Desktop\\\\Tuts\\\\new-blog\\\\src\\\\Pages\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport useFetch from \"../Hooks/useFetch\";\nimport Loading from \"../Components/Loading\";\nimport he from \"he\";\nimport axios from \"axios\";\nimport CreateChilling from \"../Components/CreateChilling\";\nimport { Card, Container, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"../Components/Nav-bar\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movie = () => {\n  _s();\n\n  const {\n    netflixid\n  } = useParams();\n  const [wait, setWait] = useState(true);\n  const [chill, setChill] = useState(true);\n  const [added, setAdded] = useState(false);\n  const [movie, setMovie] = useState([]);\n  const [chillings, setChillings] = useState([]);\n  const {\n    data,\n    pending,\n    setPending,\n    error,\n    movies,\n    total\n  } = useFetch(`https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi?t=loadvideo&q=${netflixid}`);\n  useEffect(() => {\n    if (pending === false) {\n      setWait(false);\n      setMovie(data.RESULT.nfinfo);\n      axios.get(`http://localhost:5000/chillings/movie/${netflixid}`).then(response => {\n        setChillings(response.data);\n        setChill(false);\n        setAdded(false);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [data, added]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      back: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error != null && /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"errorMovie\",\n      children: [\"Error finding that movie. \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Click here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }, this), \" to go back to home page.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) || /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-details\",\n        children: wait ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-5\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              className: \"col-md-6 col-sm-12 d-flex justify-content-center mb-2\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                id: \"movieCard\",\n                style: {\n                  width: \"25rem\",\n                  background: \"wheat\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [movie.image1 !== \"\" && /*#__PURE__*/_jsxDEV(Card.Img, {\n                    src: movie.image1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 27\n                  }, this) || /*#__PURE__*/_jsxDEV(Card.Img, {\n                    src: movie.image2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                    className: \"text-center mt-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      id: \"headings\",\n                      children: \"Title: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 27\n                    }, this), he.decode(movie.title)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      id: \"headings\",\n                      children: \"Type: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 27\n                    }, this), movie.type]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 25\n                  }, this), !movie.rating === \"0\" && /*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      id: \"headings\",\n                      children: \"Rating: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 29\n                    }, this), movie.avgrating]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      id: \"headings\",\n                      children: \"Released: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 27\n                    }, this), movie.released]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      id: \"headings\",\n                      children: \"Runtime: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 27\n                    }, this), movie.runtime]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      id: \"headings\",\n                      children: \"Synopsis: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 27\n                    }, this), he.decode(movie.synopsis)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"col-md-6 col-sm-12 d-flex justify-content-center\" //   style={{ background: \"pink\" }}\n              ,\n              children: !wait && /*#__PURE__*/_jsxDEV(CreateChilling, {\n                nid: netflixid,\n                title: he.decode(movie.title),\n                getAdded: added => setAdded(added)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"allChillings\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-center\",\n              children: \"All Chillings for this title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"justify-content-around\",\n              children: [chillings.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No chillings found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 48\n              }, this), !chill && chillings.map(chilling => /*#__PURE__*/_jsxDEV(Col, {\n                className: \"col-md-4 col-sm-6 col-xs-12 mt-5\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  id: \"chillingCard\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"headings\",\n                        children: \"Username:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 33\n                      }, this), \" \", chilling.username]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"headings\",\n                        children: \"Date:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 136,\n                        columnNumber: 33\n                      }, this), \" \", chilling.date]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"headings\",\n                        children: \"People:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 33\n                      }, this), \" \", chilling.people]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"headings\",\n                        children: \"Duration:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 33\n                      }, this), \" \", chilling.duration]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"headings\",\n                        children: \"Language:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 33\n                      }, this), \" \", chilling.language]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"headings\",\n                        children: \"Country:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 33\n                      }, this), \" \", chilling.country]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"headings\",\n                        children: \"Note:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 33\n                      }, this), \" \", chilling.note]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 27\n                }, this)\n              }, chilling._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Movie, \"SXeC7KpfwnH4wWAFpLzSeIRqaAw=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Desktop/Tuts/new-blog/src/Pages/Movie.js"],"names":["useState","useEffect","useParams","useFetch","Loading","he","axios","CreateChilling","Card","Container","Row","Col","Navbar","Link","Movie","netflixid","wait","setWait","chill","setChill","added","setAdded","movie","setMovie","chillings","setChillings","data","pending","setPending","error","movies","total","RESULT","nfinfo","get","then","response","catch","console","log","width","background","image1","image2","decode","title","type","rating","avgrating","released","runtime","synopsis","length","map","chilling","username","date","people","duration","language","country","note","_id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport useFetch from \"../Hooks/useFetch\";\r\nimport Loading from \"../Components/Loading\";\r\nimport he from \"he\";\r\nimport axios from \"axios\";\r\nimport CreateChilling from \"../Components/CreateChilling\";\r\nimport { Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navbar from \"../Components/Nav-bar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Movie = () => {\r\n  const { netflixid } = useParams();\r\n  const [wait, setWait] = useState(true);\r\n  const [chill, setChill] = useState(true);\r\n  const [added, setAdded] = useState(false);\r\n  const [movie, setMovie] = useState([]);\r\n  const [chillings, setChillings] = useState([]);\r\n\r\n  const { data, pending, setPending, error, movies, total } = useFetch(\r\n    `https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi?t=loadvideo&q=${netflixid}`\r\n  );\r\n\r\n  useEffect(() => {\r\n\r\n    if (pending === false) {\r\n      setWait(false);\r\n\r\n      setMovie(data.RESULT.nfinfo);\r\n\r\n      axios\r\n        .get(`http://localhost:5000/chillings/movie/${netflixid}`)\r\n        .then((response) => {\r\n          setChillings(response.data);\r\n          setChill(false);\r\n\r\n          setAdded(false);\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [data, added]);\r\n\r\n  return (\r\n    <>\r\n      <Navbar back={true} />\r\n      {(error != null && (\r\n        <h1 id='errorMovie'>\r\n          Error finding that movie. <Link to=\"/\">Click here</Link> to go back to\r\n          home page.\r\n        </h1>\r\n      )) || (\r\n        <div className=\"all\">\r\n          <div className=\"movie-details\">\r\n\r\n            {wait ? (\r\n              <Loading />\r\n            ) : (\r\n              <Container>\r\n                <Row className=\"mb-5\">\r\n                  <Col\r\n                    className=\"col-md-6 col-sm-12 d-flex justify-content-center mb-2\"\r\n                   \r\n                  >\r\n                    <Card\r\n                      id=\"movieCard\"\r\n                      style={{ width: \"25rem\", background: \"wheat\" }}\r\n                    >\r\n                      <Card.Body>\r\n                        {(movie.image1 !== \"\" && (\r\n                          <Card.Img src={movie.image1} />\r\n                        )) || <Card.Img src={movie.image2} />}\r\n                        <Card.Title className=\"text-center mt-4\">\r\n                          <span id=\"headings\">Title: </span>\r\n                          {he.decode(movie.title)}\r\n                        </Card.Title>\r\n                        <Card.Text className=\"text-center\">\r\n                          <span id=\"headings\">Type: </span>\r\n                          {movie.type}\r\n                        </Card.Text>\r\n                        {!movie.rating === \"0\" && (\r\n                          <Card.Text className=\"text-center\">\r\n                            <span id=\"headings\">Rating: </span>\r\n                            {movie.avgrating}\r\n                          </Card.Text>\r\n                        )}\r\n                        <Card.Text className=\"text-center\">\r\n                          <span id=\"headings\">Released: </span>\r\n                          {movie.released}\r\n                        </Card.Text>\r\n                        <Card.Text className=\"text-center\">\r\n                          <span id=\"headings\">Runtime: </span>\r\n                          {movie.runtime}\r\n                        </Card.Text>\r\n                        <Card.Text className=\"text-center\">\r\n                          <span id=\"headings\">Synopsis: </span>\r\n                          {he.decode(movie.synopsis)}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col\r\n                    className=\"col-md-6 col-sm-12 d-flex justify-content-center\"\r\n                    //   style={{ background: \"pink\" }}\r\n                  >\r\n                    {!wait && (\r\n                      <CreateChilling\r\n                        nid={netflixid}\r\n                        title={he.decode(movie.title)}\r\n                        getAdded={(added) => setAdded(added)}\r\n                      />\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n\r\n                <div id=\"allChillings\">\r\n                  <h1 className=\"text-center\">All Chillings for this title</h1>\r\n                  <Row className=\"justify-content-around\">\r\n                    {chillings.length === 0 && <p>No chillings found.</p>}\r\n                    {!chill &&\r\n                      chillings.map((chilling) => (\r\n                        <Col\r\n                          key={chilling._id}\r\n                          className=\"col-md-4 col-sm-6 col-xs-12 mt-5\"\r\n                        >\r\n                          <Card id=\"chillingCard\">\r\n                            <Card.Body>\r\n                              <Card.Text>\r\n                                <span id=\"headings\">Username:</span>{\" \"}\r\n                                {chilling.username}\r\n                              </Card.Text>\r\n                              <Card.Text>\r\n                                <span id=\"headings\">Date:</span> {chilling.date}\r\n                              </Card.Text>\r\n                              <Card.Text>\r\n                                <span id=\"headings\">People:</span>{\" \"}\r\n                                {chilling.people}\r\n                              </Card.Text>\r\n                              <Card.Text>\r\n                                <span id=\"headings\">Duration:</span>{\" \"}\r\n                                {chilling.duration}\r\n                              </Card.Text>\r\n                              <Card.Text>\r\n                                <span id=\"headings\">Language:</span>{\" \"}\r\n                                {chilling.language}\r\n                              </Card.Text>\r\n                              <Card.Text>\r\n                                <span id=\"headings\">Country:</span>{\" \"}\r\n                                {chilling.country}\r\n                              </Card.Text>\r\n                              <Card.Text>\r\n                                <span id=\"headings\">Note:</span> {chilling.note}\r\n                              </Card.Text>\r\n                            </Card.Body>\r\n                          </Card>\r\n                        </Col>\r\n                      ))}\r\n                  </Row>\r\n                </div>\r\n              </Container>\r\n            )}\r\n\r\n\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}