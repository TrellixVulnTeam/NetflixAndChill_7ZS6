{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Desktop\\\\Tuts\\\\new-blog\\\\src\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport useFetch from \"./useFetch\";\nimport Loading from \"./Loading\";\nimport he from \"he\";\nimport axios from \"axios\";\nimport CreateChilling from \"./CreateChilling\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = () => {\n  _s();\n\n  const {\n    netflixid\n  } = useParams();\n  const [wait, setWait] = useState(true);\n  const [movie, setMovie] = useState([]);\n  const [chillings, setChillings] = useState([{\n    title: props.title,\n    netflixid: parseInt(props.nid),\n    username: username,\n    pass: \"legooo\",\n    date: date,\n    people: parseInt(people),\n    duration: parseInt(duration),\n    language: language,\n    country: country,\n    note: note\n  }]);\n\n  const searchMovie = () => {};\n\n  const {\n    data,\n    pending,\n    setPending,\n    error,\n    movies,\n    total\n  } = useFetch(`https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi?t=loadvideo&q=${netflixid}`);\n  useEffect(() => {\n    if (pending == false) {\n      setWait(false);\n      setMovie(data.RESULT.nfinfo);\n      console.log(\"Movie is: \" + movie);\n      axios.get(`http://localhost:5000/chillings/movie/${netflixid}`).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: [wait ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [!movie.image1 == \"\" && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.image2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 36\n      }, this) || /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Title: \", he.decode(movie.title)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", movie.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), !movie.rating == \"0\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rating: \", movie.avgrating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Released: \", movie.released]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Runtime: \", movie.runtime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Synopsis: \", he.decode(movie.synopsis)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), console.log(netflixid), !wait && /*#__PURE__*/_jsxDEV(CreateChilling, {\n      nid: netflixid,\n      title: he.decode(movie.title)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movie, \"eOcNtTrSkOZQ0QOgHzsUBZbbKGk=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Desktop/Tuts/new-blog/src/Movie.js"],"names":["useState","useEffect","useParams","useFetch","Loading","he","axios","CreateChilling","Movie","netflixid","wait","setWait","movie","setMovie","chillings","setChillings","title","props","parseInt","nid","username","pass","date","people","duration","language","country","note","searchMovie","data","pending","setPending","error","movies","total","RESULT","nfinfo","console","log","get","then","response","catch","image1","image2","image","decode","type","rating","avgrating","released","runtime","synopsis"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\nimport Loading from \"./Loading\";\r\nimport he from \"he\";\r\nimport axios from \"axios\";\r\nimport CreateChilling from \"./CreateChilling\";\r\n\r\nconst Movie = () => {\r\n  const { netflixid } = useParams();\r\n  const [wait, setWait] = useState(true);\r\n  const [movie, setMovie] = useState([]);\r\n  const [chillings, setChillings] = useState([{\r\n    title: props.title,\r\n    netflixid: parseInt(props.nid),\r\n    username: username,\r\n    pass: \"legooo\",\r\n    date: date,\r\n    people: parseInt(people),\r\n    duration: parseInt(duration),\r\n    language: language,\r\n    country: country,\r\n    note: note,\r\n  }])\r\n  const searchMovie = () => {};\r\n  const { data, pending, setPending, error, movies, total } = useFetch(\r\n    `https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi?t=loadvideo&q=${netflixid}`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (pending == false) {\r\n      setWait(false);\r\n\r\n      setMovie(data.RESULT.nfinfo);\r\n      console.log(\"Movie is: \"+movie);\r\n\r\n      axios\r\n        .get(`http://localhost:5000/chillings/movie/${netflixid}`)\r\n        .then((response) => {\r\n          console.log(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"movie-details\">\r\n      {wait ? (\r\n        <Loading />\r\n      ) : (\r\n        <article>\r\n          {(!movie.image1 == \"\" && <img src={movie.image2}></img>) || (\r\n            <img src={movie.image}></img>\r\n          )}\r\n          <h2>Title: {he.decode(movie.title)}</h2>\r\n          <p>Type: {movie.type}</p>\r\n          {!movie.rating == \"0\" && <p>Rating: {movie.avgrating}</p>}\r\n          <p>Released: {movie.released}</p>\r\n          <p>Runtime: {movie.runtime}</p>\r\n          <p>Synopsis: {he.decode(movie.synopsis)}</p>\r\n        </article>\r\n      )}\r\n\r\n      {console.log(netflixid)}\r\n      {!wait && (\r\n        <CreateChilling nid={netflixid} title={he.decode(movie.title)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}